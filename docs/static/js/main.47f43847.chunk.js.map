{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGridItem","className","src","alt","GifGrid","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAgBzC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAe,MAKjB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAjBoB,SAACP,GACzBF,EAAeE,EAAEQ,OAAOF,a,+BCUXG,EAjBJ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAENC,EAFM,iDAE2CC,UAAUH,GAFrD,+DAGOI,MAAOF,GAHd,cAGNG,EAHM,gBAIWA,EAAKC,OAJhB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV1B,kBAcLM,GAdK,4CAAH,sDC8BEO,EA5BM,SAAEf,GAAe,IAAD,EAETd,mBAAS,CACjCqB,KAAM,GACNS,SAAS,IAJwB,mBAE5BC,EAF4B,KAErBC,EAFqB,KAyBnC,OAlBAC,qBAAW,WAETpB,EAASC,GACNoB,MAAM,SAAAC,GAELC,YAAY,WAEVJ,EAAS,CACPX,KAAMc,EACNL,SAAS,MAGV,UAIN,CAAEhB,IAEEiB,GCfMM,EAXK,SAAC,GAAoB,IAAlBX,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE5B,OACE,sBAAKsB,UAAU,yCAAf,UACE,qBAAKC,IAAMvB,EAAMwB,IAAMd,IACvB,kCAAKA,EAAL,WCsBSe,EAzBC,SAAC,GAAkB,IAAhB3B,EAAe,EAAfA,SAAe,EAECe,EAAcf,GAAlCa,EAFmB,EAExBN,KAAaS,EAFW,EAEXA,QAErB,OACE,qCACE,qBAAIQ,UAAU,oCAAd,cAAqDxB,EAArD,OAEEgB,GAAW,mBAAGQ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEIX,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADEA,EAAIC,aCmBViB,EAjCM,WAAM,MAOW1C,mBAAS,CAAC,cAPrB,mBAOlBQ,EAPkB,KAONT,EAPM,KASzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEIS,EAAWe,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADLA,YClBpB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.47f43847.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue( e.target.value );\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if ( inputValue.trim().length > 2 ) {\r\n      setCategories( categories => [inputValue, ...categories]);\r\n      setInputValue( \"\" );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input\r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;","\r\nconst getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=siOWljQfnh3UsB04h9YvtZj7THKlcD0H`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      }\r\n    })\r\n\r\n    return gifs;\r\n  }\r\n\r\n  export default getGifs;","import { useState, useEffect } from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nconst useFetchGifs = ( category ) => {\r\n  \r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect( () => {\r\n\r\n    getGifs( category )\r\n      .then( imgs => {\r\n        \r\n        setTimeout( () => {\r\n          \r\n          setState({\r\n            data: imgs,\r\n            loading: false,\r\n          });\r\n\r\n        }, 750)\r\n\r\n      })\r\n\r\n  }, [ category ])\r\n\r\n  return state;\r\n}\r\n\r\nexport default useFetchGifs;","import React from 'react';\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={ url } alt={ title } />\r\n      <p> {title} </p>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n      \r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map( img => (\r\n            <GifGridItem \r\n              key= { img.id } // La key no se manda como propiedad pero es necesaria para senialar la ubicacion del componente\r\n              { ...img } // Pasa todas las propiedades una por una\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default GifGrid;","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n  // El const categories al final no me sirve porque asi react no se enteraria\r\n  // De los posibles cambios que se vayan a dar, solo sirve si va a estar fijo siempre\r\n  // Entonces es que usamos Hooks\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map( category => (\r\n            <GifGrid\r\n              key={ category }\r\n              category={ category }\r\n            />\r\n          ))\r\n            // La key sirva para que react sepa cual es el elemento que esta\r\n            // iterando, y si ese key cambia, se va a basar en base a key\r\n            // si usaramos el indice seria muy volatil, por eso usamos category\r\n            // Lo que no hay que tener duplicados en este caso\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}